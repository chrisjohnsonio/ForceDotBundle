<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>echo "Running Apex"
cd "$TM_PROJECT_DIRECTORY"
api=22 #default
. build.properties

if [ ${usekeychainaccess} == 'enabled' ]
	then 
	password=$("${TM_BUNDLE_SUPPORT}/keychain.sh" ${password})
fi

session=0
#determine session
if [ -f ".session" ] 
	then
	session=$(cat .session)
else
	if [ ! -n "${consumerkey+x}" ]
	then
		echo "Retrying SOAP Login..."
		
		data=$(curl -s -d "&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;&lt;soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:urn=\"urn:enterprise.soap.sforce.com\"&gt;&lt;soapenv:Body&gt;&lt;urn:login&gt;&lt;urn:username&gt;${username}&lt;/urn:username&gt;&lt;urn:password&gt;${password}&lt;/urn:password&gt;&lt;/urn:login&gt;&lt;/soapenv:Body&gt;&lt;/soapenv:Envelope&gt;" -H "Content-Type: text/xml; charset=utf-8" -H "SOAPAction:'' " ${serverurl}/services/Soap/u/11.1)
		echo $data &gt; response.xml

		session=$(sed -n -e 's/.*&lt;sessionId&gt;\(.*\)&lt;\/sessionId&gt;.*/\1/p' response.xml)
		rm response.xml
	else
		echo "Retrying OAUTH Login..."
		json=$(curl -d "grant_type=password&amp;client_id=${consumerkey}&amp;client_secret=${privatekey}&amp;username=${username}&amp;password=${password}" ${serverurl}/services/oauth2/token)
		IFS=':' read -ra data &lt;&lt;&lt; "$json"
	
		session1=${data[7]}
		session0=${session1:1}
		session=${session0/\"\}/}
	fi
	echo $session &gt; .session
fi

code=$(cat ${TM_FILEPATH} | tr '\n' '\n\r')

echo "&lt;soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:apex=\"http://soap.sforce.com/2006/08/apex\"&gt;
   &lt;soapenv:Header&gt;
    &lt;apex:DebuggingHeader&gt;
	         &lt;apex:categories&gt;
	            &lt;apex:category&gt;Apex_code&lt;/apex:category&gt;
	            &lt;apex:level&gt;FINEST&lt;/apex:level&gt;
	         &lt;/apex:categories&gt;
	         &lt;apex:debugLevel&gt;DETAIL&lt;/apex:debugLevel&gt;
	      &lt;/apex:DebuggingHeader&gt;  
	&lt;apex:SessionHeader&gt;
      &lt;apex:sessionId&gt;${session}&lt;/apex:sessionId&gt;
      &lt;/apex:SessionHeader&gt;
   &lt;/soapenv:Header&gt;
   &lt;soapenv:Body&gt;
      &lt;apex:executeAnonymous&gt;
         &lt;apex:String&gt;
		  &lt;![CDATA[
			${TM_SELECTED_TEXT}
		   ]]&gt;
		&lt;/apex:String&gt;
      &lt;/apex:executeAnonymous&gt;
   &lt;/soapenv:Body&gt;
&lt;/soapenv:Envelope&gt;" &gt; request.xml

data=$(curl -s --data @request.xml  -H "Content-Type: text/xml; charset=utf-8" -H "X-PrettyPrint:1" -H "SOAPAction:'' " https://${pod}-api.salesforce.com/services/Soap/s/${api}.0)

echo ''
		
echo $data &gt; response.xml
debuglog=$(sed -n -e 's/.*&lt;debugLog&gt;\(.*\)&lt;\/debugLog&gt;.*/\1/p' response.xml)
error=$(sed -n -e 's/.*&lt;compileProblem&gt;\(.*\)&lt;\/compileProblem&gt;.*/\1/p' response.xml)
sessioncheck=$(grep -ic "INVALID_SESSION" "response.xml")
rm request.xml
rm response.xml

echo $debuglog | tr '\|' '\n'
echo $error | tr '\|' '\n'

if [ "$sessioncheck" != "0" ]
	then
	echo '\nInvalid Session.  Clearing old session, please try again'
	rm .session
fi

</string>
	<key>fallbackInput</key>
	<string>document</string>
	<key>input</key>
	<string>selection</string>
	<key>keyEquivalent</key>
	<string>^~@f</string>
	<key>name</key>
	<string>Run Apex</string>
	<key>output</key>
	<string>openAsNewDocument</string>
	<key>uuid</key>
	<string>F1A2710D-700D-43AC-99CF-31CA6502FDBF</string>
</dict>
</plist>
